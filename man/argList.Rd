% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/argList.R
\name{argList}
\alias{argList}
\alias{argList.default}
\title{argList}
\usage{
argList(margs, fargs, ...)

\method{argList}{default}(margs, fargs, ...)
}
\arguments{
\item{margs}{call: a call where all specified arguments are provided using their full names, typically achieved with \code{\link[=match.call]{match.call()}}}

\item{fargs}{list: the formal parameters of a function, typically obtained using \code{\link[=formals]{formals()}}}

\item{...}{named parameter to propagate, provided they are not lists}
}
\value{
a modified argument list
}
\description{
Creates an argument list and propagates parameter, if available.
}
\examples{
test <- function(x, y, plot=list(type="n", axes=FALSE, xlab="xlab", ylab="ylab"),
                 axis1=list(side=1), axis2=list(side=2), ...) {
   update(argList(match.call(), formals(), axis1.side='axis1', axis2.side='axis2'),
          plot='plotparams', axis1='axisparams', axis2='axisparams')
}

# set global parameters
setParamList('plotparams', graphics::plot.default, deny=c('...', 'x', 'y', 'axes'))
setParamList('axisparams', graphics::axis, deny=c('...', 'at', 'labels'))
# propagate parameter `main` to `plot`
str(test(iris[,1], iris[,2], main="plain"))
# and propagate `axis2`
str(test(iris[,1], iris[,2], axis2=4, main="axis2==4"))
# and set local parameter `axis2.side`
str(test(iris[,1], iris[,2], axis2=3, axis2.side=4, main="axis2=3 & axis2.side==4"))
}
